{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// function App() {\n//   const [skills, setSkills] = useState([]);\n//   const [file, setFile] = useState(null);\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n//   const handleUpload = async () => {\n//     if (!file) return alert('Please upload a file.');\n//     const formData = new FormData();\n//     formData.append('resume', file);\n//     try {\n//       const res = await axios.post('http://localhost:5050/extract-skills', formData);\n//       setSkills(res.data.skills);\n//     } catch (err) {\n//       console.error(err);\n//       alert('Skill extraction failed.');\n//     }\n//   };\n//   return (\n//     <div className=\"container\">\n//       <h2>Resume Skill Extractor</h2>\n//       <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Extract Skills</button>\n//       <div className=\"skills\">\n//         {skills.map((skill, index) => (\n//           <span key={index} className=\"skill-tag\">{skill}</span>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState}from'react';import axios from'axios';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[skills,setSkills]=useState([]);const[file,setFile]=useState(null);const[loading,setLoading]=useState(false);const handleFileChange=e=>{setFile(e.target.files[0]);};const handleUpload=async()=>{if(!file)return alert('Please upload a file.');setLoading(true);const formData=new FormData();formData.append('resume',file);try{const res=await axios.post('http://localhost:5050/extract-skills',formData);setSkills(res.data.skills||[]);}catch(err){console.error(err);alert('Skill extraction failed.');}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Resume Skill Extractor\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"custom-file-upload\",children:file?file.name:'Choose Resume PDF'}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload\",type:\"file\",accept:\".pdf\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:loading,children:loading?'Extracting...':'Extract Skills'}),/*#__PURE__*/_jsxs(\"div\",{className:\"skills\",children:[skills.length===0&&!loading&&/*#__PURE__*/_jsx(\"p\",{children:\"No skills extracted yet.\"}),skills.map((skill,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"skill-tag animate\",children:skill},index))]})]});}export default App;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","App","skills","setSkills","file","setFile","loading","setLoading","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","res","post","data","err","console","error","className","children","htmlFor","name","id","type","accept","onChange","onClick","disabled","length","map","skill","index"],"sources":["C:/Users/salma/Downloads/resume-skill-extractor/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [skills, setSkills] = useState([]);\n//   const [file, setFile] = useState(null);\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const handleUpload = async () => {\n//     if (!file) return alert('Please upload a file.');\n\n//     const formData = new FormData();\n//     formData.append('resume', file);\n\n//     try {\n//       const res = await axios.post('http://localhost:5050/extract-skills', formData);\n//       setSkills(res.data.skills);\n//     } catch (err) {\n//       console.error(err);\n//       alert('Skill extraction failed.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Resume Skill Extractor</h2>\n//       <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n//       <button onClick={handleUpload}>Extract Skills</button>\n\n//       <div className=\"skills\">\n//         {skills.map((skill, index) => (\n//           <span key={index} className=\"skill-tag\">{skill}</span>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [skills, setSkills] = useState([]);\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) return alert('Please upload a file.');\n\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('resume', file);\n\n    try {\n      const res = await axios.post('http://localhost:5050/extract-skills', formData);\n      setSkills(res.data.skills || []);\n    } catch (err) {\n      console.error(err);\n      alert('Skill extraction failed.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Resume Skill Extractor</h2>\n\n      <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n        {file ? file.name : 'Choose Resume PDF'}\n      </label>\n      <input id=\"file-upload\" type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n\n      <button onClick={handleUpload} disabled={loading}>\n        {loading ? 'Extracting...' : 'Extract Skills'}\n      </button>\n\n      <div className=\"skills\">\n        {skills.length === 0 && !loading && <p>No skills extracted yet.</p>}\n        {skills.map((skill, index) => (\n          <span key={index} className=\"skill-tag animate\">\n            {skill}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAa,gBAAgB,CAAIC,CAAC,EAAK,CAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CAACR,IAAI,CAAE,MAAO,CAAAS,KAAK,CAAC,uBAAuB,CAAC,CAEhDN,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAO,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,CAAEZ,IAAI,CAAC,CAE/B,GAAI,CACF,KAAM,CAAAa,GAAG,CAAG,KAAM,CAAArB,KAAK,CAACsB,IAAI,CAAC,sCAAsC,CAAEJ,QAAQ,CAAC,CAC9EX,SAAS,CAACc,GAAG,CAACE,IAAI,CAACjB,MAAM,EAAI,EAAE,CAAC,CAClC,CAAE,MAAOkB,GAAG,CAAE,CACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAClBP,KAAK,CAAC,0BAA0B,CAAC,CACnC,CACAN,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,mBACEP,KAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1B,IAAA,OAAA0B,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAE/B1B,IAAA,UAAO2B,OAAO,CAAC,aAAa,CAACF,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CACxDpB,IAAI,CAAGA,IAAI,CAACsB,IAAI,CAAG,mBAAmB,CAClC,CAAC,cACR5B,IAAA,UAAO6B,EAAE,CAAC,aAAa,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,MAAM,CAACC,QAAQ,CAAEtB,gBAAiB,CAAE,CAAC,cAEhFV,IAAA,WAAQiC,OAAO,CAAEnB,YAAa,CAACoB,QAAQ,CAAE1B,OAAQ,CAAAkB,QAAA,CAC9ClB,OAAO,CAAG,eAAe,CAAG,gBAAgB,CACvC,CAAC,cAETN,KAAA,QAAKuB,SAAS,CAAC,QAAQ,CAAAC,QAAA,EACpBtB,MAAM,CAAC+B,MAAM,GAAK,CAAC,EAAI,CAAC3B,OAAO,eAAIR,IAAA,MAAA0B,QAAA,CAAG,0BAAwB,CAAG,CAAC,CAClEtB,MAAM,CAACgC,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBACvBtC,IAAA,SAAkByB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC5CW,KAAK,EADGC,KAEL,CACP,CAAC,EACC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAnC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}